import Head from 'next/head'
import {signIn, signOut, useSession} from "next-auth/react";
import { useCallback, useEffect, useState } from 'react';
import axios from 'axios';

type Profile = {
    displayName: string
    pictureUrl: string
    statusMessage: string
    userId: string
}



export default function Home() {
    const url = process.env.NEXT_PUBLIC_LINE_AUTH_REQUEST_URL

    const { data: session, status } = useSession();
    console.log(session);

    const [profile, setProfile] = useState<Profile>()

    useEffect(() => {
        const fetchProfile = async() => {
            const accessToken = session?.user?.accessToken

            if (accessToken === undefined) {
                return
            }

            const response = await axios.get(
                'https://api.line.me/v2/profile', 
                {
                    headers: {
                        Authorization: `Bearer ${accessToken}`,
                    },
                    // params: {
                    //     access_token: accessToken
                    // }
                }
            );
            const data = await response.data;
            setProfile(data)
            return data
    
        };
        fetchProfile()
        // console.log(data);
    
    }, [session?.user?.accessToken])

    return (
        <>
            <Head>
            <title>Create Next App</title>
            <meta name="description" content="Generated by create next app" />
            <meta name="viewport" content="width=device-width, initial-scale=1" />
            <link rel="icon" href="/favicon.ico" />
            </Head>
            <main>
            <h3>ユーザー情報</h3>
            {/* <button onClick={fetchProfile}>ユーザー情報を取得する</button> */}
            <p>LINE上のユーザーID：{profile?.userId}</p>
            <p>LINE上のユーザー名：{session?.user?.name}</p>
            <p>{session?.user?.email}</p>
            {
                status !== "authenticated" && <button onClick={() => signIn("line")}>LINEログインする（実際これはLINEのボタンぽくする）</button>
            }

            {
                status === "authenticated" && <button onClick={() => signOut()}>LINEログアウトする</button>
            }
            
            </main>
        </>
    )
}
